Question: "When should accessor methods are used?"

Answer: According to the article, accessor methods (getters and setters) should only be used in specific situations where they are truly necessary because these methods expose information about how a class is implemented and in consequence make your code harder to maintain. 

Question: If you create a constructor method to build a DVD by title then create a constructor method to build a DVD by category. Does JAVA allow you to do this?

Answer: You are not allowed to do this in JAVA. The reason being that these two methods have the same footprint (In this case, both of these methods have the name "DigitalVideoDisc" and take one String as parameters). This directly violates overloading method principle, causing confusion the compiling process.

Question:  Is JAVA a Pass by Value or a Pass by Reference programming language?

Answer: JAVA is a pass-by-value programming language.

Question: a) After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two objects still remain?

b) After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is the title of the JungleDVD changed? 

Answer: a) Java passes object references by value (a copy of the reference). Therefore, changing o1 and o2 inside the method does not affect the original references. As a result, after calling swap(), jungleDVD and cinderellaDVD in main() still point to the original objects.

b) We could easily see that dvd.setTitle(title); works because it modifies the actual object; however, dvd = new DigitalVideoDisc(oldTitle); only changes the local reference, not the original object. As a result, jungleDVD still has the new title from setTitle(), but the new DVD object is lost after the method ends.

